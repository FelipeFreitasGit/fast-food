version: '3'

services:
  postgres-compose:
    image: postgres
    environment:
      POSTGRES_DB: fast-food
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "Postgres2023!"
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/data/postgres

  pgadmin-compose:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "fast-food@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "PgAdmin2023!"
    ports:
      - "15432:80"
    depends_on:
      - postgres-compose

  localstack:
    image:  localstack/localstack:0.14.2
    ports:
      - "4566-4584:4566-4584"
      - "8080:8080"
    environment:
      - SERVICES=sqs
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'

  setup-resources:
    image: amazon/aws-cli:latest
    environment:
      - AWS_ACCESS_KEY_ID=localstack
      - AWS_SECRET_ACCESS_KEY=localstack
      - AWS_DEFAULT_REGION=us-east-1
    entrypoint: /bin/sh -c
    command: >
      "
        sleep 20;                
        aws --endpoint-url=http://localstack:4566 sqs create-queue --queue-name notificacao-pagamento-sync
      "
    depends_on:
      - localstack

  mongodb_container:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db

#  fast-food:
#    image: rafaelcarmonagil/fast-food:1.1
#    ports:
#      - "8094:8080"
#    environment:
#      JAVA_OPTS: -Ddatabase_url=postgres-compose -Ddatabase_user=postgres -Ddatabase_password=Postgres2023! -Database_name=fast-food
#    networks:
#      - postgres-network
#    depends_on:
#      - postgres-compose

networks:
  default:
    external: true
    name: docker_default

volumes:
  postgres:
  mongodb_data_container: